class NTM_PainElemental : NTM_Enemy {
	Default {
		Health 400;
		Radius 31;
		Height 56;
		Mass 400;
		Speed 8;
		PainChance 128;
		MeleeThreshold 64;
		SeeSound "pain/sight";
		PainSound "pain/pain";
		DeathSound "pain/death";
		ActiveSound "pain/active";
		Tag "$FN_PAIN";
		Species "PainElemental";
		NTM_Enemy.TicsPerChase 3;
		
		-FloorClip
		+Float
		+NoGravity
	}
	
	States {
		Spawn:
			NPAI A 10 A_Look;
			Loop;
		
		DukeSee:
			NPAI AABBCCBB 3 A_NTM_DukeChase;
			Loop;
		
		BloodSee:
			NPAI AABBCCBB 3 A_NTM_BloodChase;
			Loop;
		
		SWSee:
			NPAI A 1 A_NTM_SWChase;
			NPAI AA 1 A_NTM_SWChase2;
			NPAI A 1 A_NTM_SWChase;
			NPAI AA 1 A_NTM_SWChase2;
			NPAI B 1 A_NTM_SWChase;
			NPAI BB 1 A_NTM_SWChase2;
			NPAI B 1 A_NTM_SWChase;
			NPAI BB 1 A_NTM_SWChase2;
			NPAI C 1 A_NTM_SWChase;
			NPAI CC 1 A_NTM_SWChase2;
			NPAI C 1 A_NTM_SWChase;
			NPAI CC 1 A_NTM_SWChase2;
			NPAI B 1 A_NTM_SWChase;
			NPAI BB 1 A_NTM_SWChase2;
			NPAI B 1 A_NTM_SWChase;
			NPAI BB 1 A_NTM_SWChase2;
			Loop;
		
		Melee:
			NPAI DE 5 A_FaceTarget;
			NPAI F 5 A_CustomMeleeAttack(Random(1, 6) * 10, "pain/melee");
			Goto See;
		
		Missile:
			NPAI D 0 {
				if (level.compatFlags & CompatF_LimitPain) {
					int limit = 21;
					ThinkerIterator it = ThinkerIterator.Create("LostSoul");
					
					while (it.Next()) {
						if (--limit == 0) {
							SetStateLabel("See");
						}
					}
				}
			}
			
			NPAI D 5 A_FaceTarget;
			NPAI EF 5 Bright A_FaceTarget;
			NPAI F 0 A_PainAttack;
			Goto See;
		
		Pain:
			NPAI G 12 A_Pain;
			Goto See;
			
		Death:
			NPAI H 1 Bright A_NTM_PreDeath;
			NPAI H 7 Bright A_NTM_Death;
			NPAI I 8 Bright;
			
			NPAI I 0 {
				Actor boom = Spawn("NTM_Explosion", pos + (0, 0, 32));
				
				if (boom != null) {
					boom.scale *= 1.25;
				}
				
				A_PainDie();
				A_StartSound("misc/gibbed", Chan_5);
				
				if (health >= GetGibHealth()) {
					A_SpawnItemEx("NTM_FlyingGib2", 0, 0, 0, Random(-8, 8), Random(-8, 8), Random(3, 8));
					A_SpawnItemEx("NTM_FlyingGib3", 0, 0, 0, Random(-8, 8), Random(-8, 8), Random(3, 8));
				}
			}
			
			Stop;
		
		Raise:
			PAIN M 8 A_SetScale(1, 1);
			PAIN LKJ 8;
			NPAI I 8 A_SetScale(0.666, 0.666);
			NPAI H 8;
			Goto See;
	}
}