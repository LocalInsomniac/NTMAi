class NTM_GrenadeItem : CustomInventory {
	Default {
		Scale 0.625;
		Tag "Hand Grenade";
		Inventory.MaxAmount 20;
		Inventory.InterHubAmount 0x7FFFFFFF;
		Inventory.Icon "NGRIB0";
		Inventory.PickupMessage "Hand Grenade";
		
		+Inventory.InvBar
	}
	
	States {
		Spawn:
			NGRI A -1;
			Stop;
		
		Use:
			TNT1 A 0 {
				EventHandler.SendNetworkEvent("NTM_UseGrenade");
			}
			
			Fail;
	}
}

class NTM_GrenadeThrow : Weapon {
	class<Weapon> prevWeapon;
	
	Default {
		Tag "Grenade!";
		Weapon.SlotNumber 0;
		
		+Weapon.CheatNotWeapon
		+Weapon.No_Auto_Switch
		+Weapon.NoAutoFire
		+Weapon.Explosive
		+Inventory.Undroppable
		+Inventory.Untossable
	}
	
	States {
		Select:
		Ready:
		Fire:
			NGRG A 0 A_WeaponOffset(0, 116);
			NGRG AAAAAAA 1 A_WeaponOffset(0, -12, WOF_Add);
			NGRG BC 2;
			NGRG D 2 A_StartSound("NTM_Grenade/pin");
			NGRG EF 2;
			NGRG FFFFFFF 1 A_WeaponOffset(0, 12, WOF_Add);
			
			NGRG F 0 {
				if (!sv_infiniteAmmo) {
					A_TakeInventory("NTM_GrenadeItem", 1);
				}
				
				Actor grenade = A_FireProjectile("NTM_Grenade", 0, false, 0);
				
				if (grenade) {
					grenade.vel.z += 5;
				}
			}
			
		Deselect:
			NGRG F 0 {
				A_SelectWeapon(invoker.prevWeapon, SWF_SelectPriority);
				A_TakeInventory("NTM_GrenadeThrow");
			}
			
			Stop;
	}
}

class NTM_Grenade : Actor {
	int overlap;
	
	Default {
		Radius 9;
		Height 9;
		Scale 0.3;
		Speed 18;
		Damage 25;
		Gravity 0.5;
		BounceType "Doom";
		BounceSound "NTM_Grenade/bounce";
		BounceFactor 0.666;
		BounceCount 4;
		Projectile;
		
		+CanBounceWater
		-NoGravity
		-NoTeleport
		+DontBlast
		+ForceXYBillboard
		+DontBounceOnSky
		+DontBounceOnShootables
		+UseBounceState
		+SlidesOnWalls
	}
	
	States {
		Spawn:
		Bounce:
			NGRE ABCDEFABCDEFABCDEF 3;
			
		Death:
			NGRE A 0 A_SpawnItemEx("NTM_GrenadeExplosion", flags: SXF_NoCheckPosition);
			Stop;
	}
	
	override int SpecialMissileHit(Actor victim) {
		if (victim && ++overlap > 5) {
			return -1;
		}
		
		return 1;
	}
}

class NTM_GrenadeExplosion : Actor {
	Default {
		+FixMapThingPos
	}
	
	States {
		Spawn:
			TNT1 A 0 NoDelay {
				NTMAi.Explode(self, 72, 128, XF_HurtSource);
				NTMAi.Explode(self, 72, 160, XF_HurtSource);
			}
			
			TNT1 A 0 A_StartSound("world/barrelx", 5, 0, 1, Attn_Norm, FRandom(0.8, 1.2));
			TNT1 A 0 A_SpawnItemEx("NTM_Explosion2");
			TNT1 A 15 A_Quake(2, 15, 0, 800, "");
			Stop;
	}
}